{"version":3,"sources":["images/ghost.png","images/tiger.png","images/bison.png","images/snake.png","images/algore.png","components/Header.js","components/rain-graphics/Ghost.js","components/rain-graphics/Tiger.js","components/rain-graphics/Bison.js","components/rain-graphics/Snake.js","components/rain-graphics/AlGore.js","components/Main.js","components/Ad.js","components/Footer.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Header","_ref","writeCity","updateCity","react_default","a","createElement","type","id","onChange","onClick","Ghost","className","src","ghost","alt","Tiger","tiger","Bison","bison","Snake","snake","AlGore","algore","Main","rainGraphic","kindOfRain","this","props","detailedForecast","toLowerCase","includes","rain_graphics_Tiger","rain_graphics_Bison","rain_graphics_Snake","rain_graphics_Ghost","rain_graphics_AlGore","city","shortForecast","Component","Ad","max","index","Math","floor","random","adTitle","adContent","adSite","href","Footer","components_Ad","App","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","updateCityAndFetch","fetchACity","event","setState","cityFieldValue","target","value","state","coord","periods","icon","_this2","fetch","concat","then","res","json","data","lat","results","locations","latLng","lng","fetchCoord","fetchACoordinate","_this3","properties","console","log","document","querySelector","style","backgroundImage","components_Header","components_Main","components_Footer","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e851ea72.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/ghost.fa029af8.png\";","module.exports = __webpack_public_path__ + \"static/media/tiger.269d352b.png\";","module.exports = __webpack_public_path__ + \"static/media/bison.218c2688.png\";","module.exports = __webpack_public_path__ + \"static/media/snake.e3c618a5.png\";","module.exports = __webpack_public_path__ + \"static/media/algore.0dd1e5e3.png\";","import React from 'react'\r\n\r\nconst Header = ({ writeCity, updateCity }) => {\r\n\r\n\treturn (\r\n\t\t<header>\r\n\t\t\t<h1>weather</h1>\r\n\t      \t<div>\r\n\t      \t\t<label><input type=\"text\" id=\"city\" onChange={writeCity} /></label>\r\n\t      \t\t<button onClick={updateCity}>Search</button>\r\n\t      \t</div>\r\n    \t</header>\r\n\t)\r\n}\r\n\r\nexport default Header","import React from 'react'\r\nimport ghost from '../../images/ghost.png'\r\n\r\nconst Ghost = () => {\r\n\r\n\treturn (\r\n\t\t<img className=\"rain-graphic\" src={ghost} alt=\"AHHHHHHHH!\" />\r\n\t)\r\n}\r\n\r\nexport default Ghost","import React from 'react'\r\nimport tiger from '../../images/tiger.png'\r\n\r\nconst Tiger = () => {\r\n\r\n\treturn (\r\n\t\t<img className=\"rain-graphic\" src={tiger} alt=\"Rarrrr!\" />\r\n\t)\r\n}\r\n\r\nexport default Tiger","import React from 'react'\r\nimport bison from '../../images/bison.png'\r\n\r\nconst Bison = () => {\r\n\r\n\treturn (\r\n\t\t<img className=\"rain-graphic\" src={bison} alt=\"rghhhhhggrrrrrr.\" />\r\n\t)\r\n}\r\n\r\nexport default Bison","import React from 'react'\r\nimport snake from '../../images/snake.png'\r\n\r\nconst Snake = () => {\r\n\r\n\treturn (\r\n\t\t<img className=\"rain-graphic\" src={snake} alt=\"ssssssssssssssss.\" />\r\n\t)\r\n}\r\n\r\nexport default Snake","import React from 'react'\r\nimport algore from '../../images/algore.png'\r\n\r\nconst AlGore = () => {\r\n\r\n\treturn (\r\n\t\t<img className=\"rain-graphic\" src={algore} alt=\"HOWS THIS FOR  C L I M A T E   C H A N G E!!!!\" />\r\n\t)\r\n}\r\n\r\nexport default AlGore","import React from 'react'\r\nimport { Component } from 'react'\r\nimport Ghost from './rain-graphics/Ghost'\r\nimport Tiger from './rain-graphics/Tiger'\r\nimport Bison from './rain-graphics/Bison'\r\nimport Snake from './rain-graphics/Snake'\r\nimport AlGore from './rain-graphics/AlGore'\r\n\r\n\r\nclass Main extends Component {\r\n\r\n\r\n\trender (){\r\n\r\n\tlet kindOfRain = 'nothing'\r\n\tlet rainGraphic\r\n\tif (this.props.detailedForecast.toLowerCase().includes('storm')){\r\n\t\tkindOfRain = 'tigers'\r\n\t\trainGraphic = <Tiger />\r\n\t} else if (this.props.detailedForecast.toLowerCase().includes('snow')){\r\n\t\tkindOfRain = 'bison'\r\n\t\trainGraphic = <Bison />\r\n\t} else if (this.props.detailedForecast.toLowerCase().includes('rain')){\r\n\t\tkindOfRain = 'snakes'\r\n\t\trainGraphic = <Snake />\r\n\t}  else if (this.props.detailedForecast.toLowerCase().includes('cloud')){\r\n\t\tkindOfRain = 'ghosts'\r\n\t\trainGraphic = <Ghost />\r\n\t} else if (this.props.detailedForecast.toLowerCase().includes('overcast')){\r\n\t\tkindOfRain = 'ghouls'\r\n\t\trainGraphic = <Ghost />\r\n\t} else if (this.props.detailedForecast.toLowerCase().includes('fog')){\r\n\t\tkindOfRain = 'ghouls'\r\n\t\trainGraphic = <Ghost />\r\n\t} else if (this.props.detailedForecast.toLowerCase().includes('haze')){\r\n\t\tkindOfRain = 'ghosts'\r\n\t\trainGraphic = <Ghost />\r\n\t} else if (this.props.detailedForecast.toLowerCase().includes('you done fucked up')){\r\n\t\tkindOfRain = 'Al Gore'\r\n\t\trainGraphic = <AlGore />\r\n\t}else {\r\n\t\tkindOfRain = 'nothing'\r\n\t}\r\n\r\n\t\treturn(\r\n\t\t\t<main>\r\n\t\t\t<section className=\"information\">\r\n\t\t\t\t<h2>{this.props.city}</h2>\r\n\t\t\t\t<h3>It&#8217;s raining fucking {kindOfRain}</h3>\r\n\t\t\t\t<p>{this.props.shortForecast}</p>\r\n\t\t\t</section>\r\n\t\t\t{rainGraphic}\r\n\t\t\t</main>\r\n\t\t\t)\r\n\t}\r\n}\r\n\r\nexport default Main","import React from 'react'\r\n\r\nconst Ad = () => {\r\n\r\n\tfunction getRandomInt(max) {\r\n \t\treturn Math.floor(Math.random() * Math.floor(max));\r\n\t}\r\n\r\n\tconst titlesArray = [\r\n\t\t'Jerry\\'s Swift Kick in the Ass',\r\n\t\t'Pruning Shears',\r\n\t\t'Barely Legal Ocelots',\r\n\t\t'Seven Types of Internet Cheese',\r\n\t\t'Risk-Free Dog Cloning!',\r\n\t\t'Lady Stuff',\r\n\t\t'Ranch Dressing Fountain',\r\n\t\t'Animated Cat GIFs'\r\n\r\n\t]\r\n\tconst contentArray = [\r\n\t\t'Need a swift kick in the ass? Call Jerry for all your \"a swift kick in the ass\" needs.',\r\n\t\t'Pruning shears? Pruning shears, pruning shears. Pruning shears!',\r\n\t\t'Need to buy an ocelot semi-legally? We\\'ve got you covered!',\r\n\t\t'We have all seven types of cheese on the internet!',\r\n\t\t'We clone you dog risk free trial!',\r\n\t\t'All the best discount lady stuff. Free shipping!',\r\n\t\t'Buy fondue party accessories online',\r\n\t\t'All the animated cat gifs at strong discount price'\r\n\r\n\t]\r\n\tconst siteArray = [\r\n\t\t'www.jerryasskicker.com',\r\n\t\t'www.pruningshearspruningshears.com',\r\n\t\t'www.buyocelotsonline.nz',\r\n\t\t'www.whole7.com/offer',\r\n\t\t'www.easyreplacepet.tv',\r\n\t\t'www.myfairpricelady.us',\r\n\t\t'www.ranchdressingfountain.com',\r\n\t\t'www.animateurcatgiffs.gov'\r\n\r\n\t]\r\n\r\n\tlet index = getRandomInt(8)\r\n\r\n\tlet adTitle = titlesArray[index]\r\n\tlet adContent = contentArray[index]\r\n\tlet adSite = siteArray[index]\r\n\r\n\r\n\treturn (\r\n\t\t<div className=\"ad\">\r\n\t\t\t<a href=\"#\">{adTitle}</a>\r\n\t\t\t<p>{adContent}</p>\r\n\t\t\t<a href=\"#\" id=\"green-links\">{adSite}</a>\r\n\t\t</div>\r\n\r\n\t)\r\n}\r\n\r\nexport default Ad","import React from 'react'\r\nimport Ad from './Ad'\r\n\r\nconst Footer = () => {\r\n\r\n\treturn (\r\n\t\t<footer>\r\n\t\t\t<Ad />\r\n\t\t</footer>\r\n\t)\r\n}\r\n\r\nexport default Footer","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport Header from './components/Header'\r\nimport Main from './components/Main'\r\nimport Footer from './components/Footer'\r\n\r\nclass App extends Component {\r\n\r\n\tconstructor(){\r\n\t\tsuper()\r\n\t\tthis.state = {\r\n\t\t\tcityFieldValue: 'Reamstown, PA',\r\n\t\t\tcity: 'Reamstown, PA',\r\n\t\t\tcoord: '40,-83',\r\n\t\t\tperiods: {},\r\n\t\t\tshortForecast: '80% chance of being in Reamstown',\r\n\t\t\tdetailedForecast: '',\r\n\t\t\ticon: ''\r\n\t\t}\r\n\t\tthis.updateCity()\r\n\t}\r\n\r\n\tupdateCityAndFetch = (city) => {\r\n\t\tthis.fetchACity(city)\r\n\t\treturn (city)\r\n\t}\r\n\twriteCity = (event) => {\r\n\t\tthis.setState({cityFieldValue: event.target.value})\r\n\t}\r\n\r\n\tupdateCity = () => {\r\n\t\tthis.setState({city: this.updateCityAndFetch(this.state.cityFieldValue)})\r\n\t}\r\n\r\n\tfetchACity(city) {\r\n\t\t// const key = 'rjLXBlVWGsiGJ33H9kpLx4EoTWHqspy2'\r\n\t\tfetch(`http://www.mapquestapi.com/geocoding/v1/address?key=rjLXBlVWGsiGJ33H9kpLx4EoTWHqspy2&location=${city}`).then(res=>res.json())\r\n\t\t.then(data => {\r\n\t\t\tconst lat = data.results[0].locations[0].latLng.lat\r\n\t\t\tconst lng = data.results[0].locations[0].latLng.lng\r\n\t\t\tconst fetchCoord = (`${lat},${lng}`)\r\n\t\t\tthis.setState({coord: fetchCoord})\r\n\t\t\tthis.fetchACoordinate()\r\n\t\t})\r\n\t}\r\n\r\n\tfetchACoordinate () {\r\n\t\tfetch(`https://api.weather.gov/points/${this.state.coord}/forecast`)\r\n\t\t.then(res => res.json())\r\n\t\t.then(data => {\r\n\t\t\tif(!data.properties){\r\n\t\t\t\tthis.setState({city: 'Please search only inside the US'})\r\n\t\t\t\tthis.setState({shortForecast: '75% chance of hellfire and brimstone'})\r\n\t\t\t\tthis.setState({detailedForecast: 'you done fucked up'})\r\n\t\t\t\treturn\r\n\t\t\t}\r\n\t\t\tthis.setState({periods: data.properties.periods})\r\n\t\t\tthis.setState({shortForecast: data.properties.periods[0].shortForecast})\r\n\t\t\tthis.setState({icon: data.properties.periods[0].icon})\r\n\t\t\tthis.setState({detailedForecast: data.properties.periods[0].detailedForecast})\r\n\t\t\tconsole.log(this.state.detailedForecast)\r\n\t\t})\r\n\t\t\r\n\t}\r\n\r\n\trender() {\r\n\r\n\t\tdocument.querySelector('body').style.backgroundImage = `url(\"${this.state.icon}\")`\r\n\t\treturn (\r\n\t\t\t<div className=\"App\">\r\n\t\t\t\t<Header writeCity={this.writeCity} updateCity={this.updateCity}/>\r\n\t\t\t\t<Main city={this.state.city} shortForecast={this.state.shortForecast} detailedForecast={this.state.detailedForecast} />\r\n\t\t\t\t<Footer />\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}